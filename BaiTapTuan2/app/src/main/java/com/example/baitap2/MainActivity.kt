package com.example.baitap2

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.baitap2.ui.theme.HelloWorldUTHTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            HelloWorldUTHTheme {
                Scaffold(
                    modifier = Modifier.fillMaxSize()
                ) { innerPadding ->
                    Surface(
                        modifier = Modifier
                            .fillMaxSize()
                            .padding(innerPadding),
                        color = MaterialTheme.colorScheme.background
                    ) {
                        ProfileScreen()
                    }
                }
            }
        }
    }
}

@Composable
fun ProfileScreen() {
    // CƒÉn gi·ªØa d·ªçc v√† ngang
    Column(
        modifier = Modifier
            .fillMaxSize(),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center // üëà THAY ƒêO·∫†N N√ÄY
    ) {
        // Avatar tr√≤n m√†u ƒë·ªè, b·∫°n c√≥ th·ªÉ thay b·∫±ng ·∫£nh th·∫≠t
        Image(
            painter = painterResource(id = R.drawable.avatar), // t√™n file ·∫£nh b·∫°n ƒë·∫∑t trong drawable
            contentDescription = null,
            modifier = Modifier
                .size(120.dp)
                .clip(CircleShape),
            contentScale = ContentScale.Crop
        )

        Spacer(modifier = Modifier.height(20.dp))

        // T√™n v√† m√£ l·ªõp h·ªçc
        Text(
            text = "Pham Thi Ngoc Cham - CN22H",
            fontWeight = FontWeight.Bold,
            fontSize = 18.sp
        )

        Spacer(modifier = Modifier.height(12.dp))

        // D√≤ng m√¥ t·∫£ nh·ªè b√™n d∆∞·ªõi
        Text(
            text = "Mong mu·ªën v√† ƒë·ªãnh h∆∞·ªõng c·ªßa " +
                    "T√¥i sau khi h·ªçc xong m√¥n h·ªçc l√† t·∫°o ƒë∆∞·ª£c m·ªôt app cho ri√™ng m√¨nh.",
            fontSize = 14.sp,
            color = Color.Gray,
            modifier = Modifier.padding(horizontal = 40.dp),
            lineHeight = 18.sp,
            textAlign = TextAlign.Center
        )
    }
}

@Preview(showBackground = true)
@Composable
fun ProfileScreenPreview() {
    HelloWorldUTHTheme {
        ProfileScreen()
    }
}
